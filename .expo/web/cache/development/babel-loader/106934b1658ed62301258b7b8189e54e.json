{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/shobhit.joshi@avalara.com/hackathon/ava-tar/src/screens/ColorScreen.js\";\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  var rgbCreator = function rgbCreator() {\n    var red = Math.floor(Math.random() * 256);\n    var blue = Math.floor(Math.random() * 256);\n    var green = Math.floor(Math.random() * 256);\n    return \"rgb(\" + red + \",\" + green + \",\" + blue + \")\";\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return setColors([].concat(_toConsumableArray(colors), [rgbCreator()]));\n    },\n    title: \"Add color\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: colors,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.flex,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 100,\n          width: 100,\n          backgroundColor: item\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: styles.flexRow,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }\n      }, item));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 30,\n    marginTop: 50\n  },\n  flex: {\n    display: 'flex'\n  },\n  flexRow: {\n    display: 'flex',\n    flexDirection: 'row'\n  }\n});\nexport default ColorScreen;","map":{"version":3,"sources":["/Users/shobhit.joshi@avalara.com/hackathon/ava-tar/src/screens/ColorScreen.js"],"names":["React","useState","ColorScreen","colors","setColors","rgbCreator","red","Math","floor","random","blue","green","item","styles","flex","height","width","backgroundColor","flexRow","StyleSheet","create","text","fontSize","marginTop","display","flexDirection"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACID,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACjBE,MADiB;AAAA,MACTC,SADS;;AAExB,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,QAAMC,IAAI,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACA,QAAME,KAAK,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,oBAAcH,GAAd,SAAqBK,KAArB,SAA8BD,IAA9B;AACD,GALD;;AAMA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMN,SAAS,8BAAKD,MAAL,IAAaE,UAAU,EAAvB,GAAf;AAAA,KAAjB;AAA6D,IAAA,KAAK,EAAC,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,MADR;AAEE,IAAA,UAAU,EAAE,0BAAc;AAAA,UAAXS,IAAW,QAAXA,IAAW;AACxB,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE,GAAtB;AAA2BC,UAAAA,eAAe,EAAEL;AAA5C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACK,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BN,IAA9B,CAFF,CADF;AAMD,KATH;AAUE,IAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,aAAIA,IAAJ;AAAA,KAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAkBD,CA1BD;;AA4BA,IAAMC,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,SAAS,EAAE;AAFP,GADyB;AAK/BT,EAAAA,IAAI,EAAE;AACJU,IAAAA,OAAO,EAAE;AADL,GALyB;AAQ/BN,EAAAA,OAAO,EAAE;AACPM,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,aAAa,EAAE;AAFR;AARsB,CAAlB,CAAf;AAcA,eAAevB,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Text, StyleSheet, FlatList, View, Button } from 'react-native';\n\nconst ColorScreen = () => {\n  const [colors, setColors] = useState([]);\n  const rgbCreator = () => {\n    const red = Math.floor(Math.random() * 256);\n    const blue = Math.floor(Math.random() * 256);\n    const green = Math.floor(Math.random() * 256);\n    return `rgb(${red},${green},${blue})`;\n  };\n  return (\n    <View>\n      <Button onPress={() => setColors([...colors, rgbCreator()])} title='Add color'></Button>\n      <FlatList\n        data={colors}\n        renderItem={({ item }) => {\n          return (\n            <View style={styles.flex}>\n              <View style={{ height: 100, width: 100, backgroundColor: item }}></View>\n              <Text style={styles.flexRow}>{item}</Text>\n            </View>\n          );\n        }}\n        keyExtractor={item => item}\n      ></FlatList>\n      {/* {console.log(colors)} */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 30,\n    marginTop: 50\n  },\n  flex: {\n    display: 'flex'\n  },\n  flexRow: {\n    display: 'flex',\n    flexDirection: 'row'\n  }\n});\n\nexport default ColorScreen;\n"]},"metadata":{},"sourceType":"module"}