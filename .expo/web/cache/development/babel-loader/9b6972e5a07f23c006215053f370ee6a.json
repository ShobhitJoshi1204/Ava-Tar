{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/shobhit.joshi@avalara.com/hackathon/ava-tar/src/screens/LeaveScreen/LeaveModal/index.js\";\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport ModalComponent from \"../../../../utils/Modal\";\nimport DatePicker from \"../../../../utils/DatePicker\";\nimport { Select, VStack, CheckIcon, Center, NativeBaseProvider, Icon } from \"native-base\";\nimport { Entypo } from \"@expo/vector-icons\";\n\nvar LeaveModal = function LeaveModal(props) {\n  var showModal = props.showModal,\n      setShowModal = props.setShowModal,\n      handleModalConfirm = props.handleModalConfirm;\n\n  var _React$useState = React.useState(new Date()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      startDate = _React$useState2[0],\n      setStartDate = _React$useState2[1];\n\n  var _React$useState3 = React.useState(new Date()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      endDate = _React$useState4[0],\n      setEndDate = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      openstartDate = _React$useState6[0],\n      setOpenStartDate = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      openEndDate = _React$useState8[0],\n      setOpenEndDate = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      selectedLeaveType = _React$useState10[0],\n      setSelectedLeaveType = _React$useState10[1];\n\n  var handleStartDate = function handleStartDate(startdate) {\n    setOpenStartDate(false);\n    setStartDate(startdate || new Date());\n  };\n\n  var handleEndDate = function handleEndDate(enddate) {\n    setOpenEndDate(false);\n    setEndDate(enddate || new Date());\n  };\n\n  return React.createElement(NativeBaseProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Center, {\n    flex: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(ModalComponent, {\n    showModal: showModal,\n    setShowModal: setShowModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.headerView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.headText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, \"Apply leave\"), React.createElement(Pressable, {\n    onPress: function onPress() {\n      setShowModal(!showModal);\n    },\n    style: styles.headButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    size: \"md\",\n    as: React.createElement(Entypo, {\n      name: \"cross\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }),\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.startDateView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.startDateHeadText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"To\"), React.createElement(Pressable, {\n    onPress: function onPress() {\n      setOpenStartDate(true);\n    },\n    style: {\n      borderWidth: 1,\n      borderColor: \"#059bd2\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.startDateText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, startDate.toLocaleDateString())), openstartDate ? React.createElement(DatePicker, {\n    date: startDate,\n    onHandleChange: handleStartDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }) : null)), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.endDateView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.endDateHeadText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"From\"), React.createElement(Pressable, {\n    onPress: function onPress() {\n      setOpenEndDate(true);\n    },\n    style: {\n      borderWidth: 1,\n      borderColor: \"#059bd2\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.endDateText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, endDate.toLocaleDateString())), openEndDate ? React.createElement(DatePicker, {\n    date: endDate,\n    onHandleChange: handleEndDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }) : null)), React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 4,\n    style: styles.dropdownView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, React.createElement(Select, {\n    selectedValue: selectedLeaveType,\n    minWidth: 200,\n    accessibilityLabel: \"Select leave type\",\n    placeholder: \"Select leave type\",\n    onValueChange: function onValueChange(itemValue) {\n      return setSelectedLeaveType(itemValue);\n    },\n    _selectedItem: {\n      bg: \"cyan.600\",\n      endIcon: React.createElement(CheckIcon, {\n        size: 4,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 28\n        }\n      })\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, React.createElement(Select.Item, {\n    label: \"Casual leave\",\n    value: \"casual\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), React.createElement(Select.Item, {\n    label: \"Sick leave\",\n    value: \"sick\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), React.createElement(Select.Item, {\n    label: \"Optional leave\",\n    value: \"optional\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }))), React.createElement(Pressable, {\n    style: styles.confirmBox,\n    onPress: function onPress() {\n      handleModalConfirm(startDate, endDate, selectedLeaveType);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.confirmText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Confirm\"))))));\n};\n\nvar styles = StyleSheet.create({\n  headerView: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  headButton: {\n    flex: 1,\n    paddingRight: 20,\n    marginVertical: 10,\n    position: \"absolute\",\n    right: 0\n  },\n  headText: {\n    flex: 8,\n    textAlign: \"center\",\n    marginVertical: 10,\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  confirmText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    padding: 10\n  },\n  confirmBox: {\n    backgroundColor: \"#059bd2\",\n    borderRadius: 4,\n    alignSelf: \"center\",\n    marginTop: 30\n  },\n  startDateText: {\n    padding: 10,\n    fontSize: 20\n  },\n  startDateHeadText: {\n    padding: 10,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginRight: 13\n  },\n  startDateView: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginVertical: 10\n  },\n  endDateText: {\n    padding: 10,\n    fontSize: 20\n  },\n  endDateHeadText: {\n    paddingRight: 10,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginVertical: 10\n  },\n  endDateView: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginVertical: 10\n  },\n  dropdownLabel: {\n    fontSize: 20,\n    marginVertical: 10,\n    marginRight: 12\n  },\n  dropdownView: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: 10\n  }\n});\nexport default LeaveModal;","map":{"version":3,"sources":["/Users/shobhit.joshi@avalara.com/hackathon/ava-tar/src/screens/LeaveScreen/LeaveModal/index.js"],"names":["React","ModalComponent","DatePicker","Select","VStack","CheckIcon","Center","NativeBaseProvider","Icon","Entypo","LeaveModal","props","showModal","setShowModal","handleModalConfirm","useState","Date","startDate","setStartDate","endDate","setEndDate","openstartDate","setOpenStartDate","openEndDate","setOpenEndDate","selectedLeaveType","setSelectedLeaveType","handleStartDate","startdate","handleEndDate","enddate","styles","headerView","headText","headButton","startDateView","startDateHeadText","borderWidth","borderColor","startDateText","toLocaleDateString","endDateView","endDateHeadText","endDateText","dropdownView","itemValue","bg","endIcon","confirmBox","confirmText","StyleSheet","create","display","flexDirection","flex","paddingRight","marginVertical","position","right","textAlign","fontSize","fontWeight","color","padding","backgroundColor","borderRadius","alignSelf","marginTop","marginRight","justifyContent","dropdownLabel"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Text, View, StyleSheet, Pressable, Picker } from \"react-native\";\nimport ModalComponent from \"../../../../utils/Modal\";\nimport DatePicker from \"../../../../utils/DatePicker\";\nimport {\n  Select,\n  VStack,\n  CheckIcon,\n  Center,\n  NativeBaseProvider,\n  Icon,\n} from \"native-base\";\nimport { Entypo } from \"@expo/vector-icons\";\n\nconst LeaveModal = (props) => {\n  const { showModal, setShowModal, handleModalConfirm } = props;\n\n  const [startDate, setStartDate] = React.useState(new Date());\n  const [endDate, setEndDate] = React.useState(new Date());\n  const [openstartDate, setOpenStartDate] = React.useState(false);\n  const [openEndDate, setOpenEndDate] = React.useState(false);\n  const [selectedLeaveType, setSelectedLeaveType] = React.useState(\"\");\n\n  const handleStartDate = (startdate) => {\n    setOpenStartDate(false);\n    setStartDate(startdate || new Date());\n  };\n  const handleEndDate = (enddate) => {\n    setOpenEndDate(false);\n    setEndDate(enddate || new Date());\n  };\n\n  return (\n    <NativeBaseProvider>\n      <Center flex={1}>\n        <ModalComponent showModal={showModal} setShowModal={setShowModal}>\n          <View>\n            <View style={styles.headerView}>\n              <Text style={styles.headText}>Apply leave</Text>\n              <Pressable\n                onPress={() => {\n                  setShowModal(!showModal);\n                }}\n                style={styles.headButton}\n              >\n                <Icon size=\"md\" as={<Entypo name=\"cross\" />} color=\"black\" />\n              </Pressable>\n            </View>\n            <View>\n              <View style={styles.startDateView}>\n                <Text style={styles.startDateHeadText}>To</Text>\n                <Pressable\n                  onPress={() => {\n                    setOpenStartDate(true);\n                  }}\n                  style={{ borderWidth: 1, borderColor: \"#059bd2\" }}\n                >\n                  <Text style={styles.startDateText}>\n                    {startDate.toLocaleDateString()}\n                  </Text>\n                </Pressable>\n\n                {openstartDate ? (\n                  <DatePicker\n                    date={startDate}\n                    onHandleChange={handleStartDate}\n                  />\n                ) : null}\n              </View>\n            </View>\n\n            <View>\n              <View style={styles.endDateView}>\n                <Text style={styles.endDateHeadText}>From</Text>\n                <Pressable\n                  onPress={() => {\n                    setOpenEndDate(true);\n                  }}\n                  style={{ borderWidth: 1, borderColor: \"#059bd2\" }}\n                >\n                  <Text style={styles.endDateText}>\n                    {endDate.toLocaleDateString()}\n                  </Text>\n                </Pressable>\n\n                {openEndDate ? (\n                  <DatePicker date={endDate} onHandleChange={handleEndDate} />\n                ) : null}\n              </View>\n            </View>\n\n            <VStack alignItems=\"center\" space={4} style={styles.dropdownView}>\n              <Select\n                selectedValue={selectedLeaveType}\n                minWidth={200}\n                accessibilityLabel=\"Select leave type\"\n                placeholder=\"Select leave type\"\n                onValueChange={(itemValue) => setSelectedLeaveType(itemValue)}\n                _selectedItem={{\n                  bg: \"cyan.600\",\n                  endIcon: <CheckIcon size={4} />,\n                }}\n              >\n                <Select.Item label=\"Casual leave\" value=\"casual\" />\n                <Select.Item label=\"Sick leave\" value=\"sick\" />\n                <Select.Item label=\"Optional leave\" value=\"optional\" />\n              </Select>\n            </VStack>\n\n            <Pressable\n              style={styles.confirmBox}\n              onPress={() => {\n                handleModalConfirm(startDate, endDate, selectedLeaveType);\n              }}\n            >\n              <Text style={styles.confirmText}>Confirm</Text>\n            </Pressable>\n          </View>\n        </ModalComponent>\n      </Center>\n    </NativeBaseProvider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerView: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  headButton: {\n    flex: 1,\n    paddingRight: 20,\n    marginVertical: 10,\n    position: \"absolute\",\n    right: 0,\n  },\n  headText: {\n    flex: 8,\n    textAlign: \"center\",\n    marginVertical: 10,\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  confirmText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    padding: 10,\n  },\n  confirmBox: {\n    backgroundColor: \"#059bd2\",\n    borderRadius: 4,\n    alignSelf: \"center\",\n    marginTop: 30,\n  },\n  startDateText: { padding: 10, fontSize: 20 },\n  startDateHeadText: {\n    padding: 10,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginRight: 13,\n  },\n  startDateView: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginVertical: 10,\n  },\n  endDateText: { padding: 10, fontSize: 20 },\n  endDateHeadText: {\n    paddingRight: 10,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginVertical: 10,\n  },\n  endDateView: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginVertical: 10,\n  },\n  dropdownLabel: {\n    fontSize: 20,\n    marginVertical: 10,\n    marginRight: 12,\n  },\n  dropdownView: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: 10,\n  },\n});\n\nexport default LeaveModal;\n"]},"metadata":{},"sourceType":"module"}